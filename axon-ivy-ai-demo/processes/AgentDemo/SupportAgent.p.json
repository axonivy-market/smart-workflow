{
  "$schema" : "https://json-schema.axonivy.com/process/13.1.2/process.json",
  "id" : "197F7D477CB93027",
  "kind" : "CALLABLE_SUB",
  "config" : {
    "data" : "AgentDemo.SupportAgentData"
  },
  "elements" : [ {
      "id" : "f0",
      "type" : "CallSubStart",
      "name" : "Create task",
      "config" : {
        "signature" : "createSupportTask",
        "input" : {
          "params" : [
            { "name" : "supportTicket", "type" : "com.axonivy.utils.ai.axon.ivy.ai.demo.dto.SupportTicket", "desc" : "The task information object" }
          ],
          "map" : {
            "out.supportTicket" : "param.supportTicket"
          }
        },
        "result" : {
          "params" : [
            { "name" : "taskResult", "type" : "com.axonivy.utils.ai.dto.ai.AiVariable", "desc" : "" }
          ],
          "map" : {
            "result.taskResult" : "in.aiVariable"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 88, "y" : 72 },
        "description" : "Use this tool to create a support ticket task"
      },
      "connect" : [
        { "id" : "f83", "to" : "f76" }
      ]
    }, {
      "id" : "f2",
      "type" : "CallSubEnd",
      "visual" : {
        "at" : { "x" : 1192, "y" : 72 }
      }
    }, {
      "id" : "f3",
      "type" : "TriggerCall",
      "name" : "Create support ticket",
      "config" : {
        "processCall" : "AgentDemo/SupportBusiness:createSupportTicket(com.axonivy.utils.ai.dto.ivy.TaskInfo)",
        "call" : {
          "map" : {
            "param.taskInfo" : "in.taskInfo"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 904, "y" : 72 }
      },
      "connect" : [
        { "id" : "f4", "to" : "f5" }
      ]
    }, {
      "id" : "f5",
      "type" : "Script",
      "name" : "Prepare result",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.dto.IvyToolParameter;",
            "import com.axonivy.utils.ai.enums.AiVariableState;",
            "import com.axonivy.utils.ai.dto.ai.AiVariable;",
            "",
            "in.aiVariable = new AiVariable();",
            "in.aiVariable.setParameter(new IvyToolParameter());",
            "in.aiVariable.getParameter().setClassName(\"String\");",
            "in.aiVariable.getParameter().setValue(\"Task is created successfully\");",
            "in.aiVariable.getParameter().setName(\"taskResult\");",
            "in.aiVariable.state = AiVariableState.SUCCESS;"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 1064, "y" : 72 }
      },
      "connect" : [
        { "id" : "f6", "to" : "f2" }
      ]
    }, {
      "id" : "f7",
      "type" : "CallSubStart",
      "name" : "Create SupportTicket object",
      "config" : {
        "signature" : "createSupportTicket",
        "input" : {
          "params" : [
            { "name" : "query", "type" : "String", "desc" : "The original input query" },
            { "name" : "employeeUsername", "type" : "String", "desc" : "Username of the employee who create the request" }
          ],
          "map" : {
            "out.employeeUsername" : "param.employeeUsername",
            "out.query" : "param.query"
          }
        },
        "result" : {
          "params" : [
            { "name" : "supportTicket", "type" : "com.axonivy.utils.ai.axon.ivy.ai.demo.dto.SupportTicket", "desc" : "support ticket object" }
          ],
          "map" : {
            "result.supportTicket" : "in.supportTicket"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 88, "y" : 232 },
        "labelOffset" : { "x" : 1, "y" : 41 },
        "description" : "Use this tool to create a support ticket object"
      },
      "connect" : [
        { "id" : "f8", "to" : "f12" }
      ]
    }, {
      "id" : "f9",
      "type" : "CallSubEnd",
      "visual" : {
        "at" : { "x" : 1264, "y" : 232 }
      }
    }, {
      "id" : "f10",
      "type" : "SubProcessCall",
      "name" : "Use AI to decide",
      "config" : {
        "processCall" : "AiTool/DecisionMaking:AiDecide(List<com.axonivy.utils.ai.dto.ai.AiOption>,String,List<com.axonivy.utils.ai.dto.ai.AiExample>,List<String>,com.axonivy.utils.ai.connector.AbstractAiServiceConnector)",
        "call" : {
          "map" : {
            "param.options" : "in.options",
            "param.query" : "in.query",
            "param.connector" : "in.connector"
          }
        },
        "output" : {
          "map" : {
            "out" : "in",
            "out.categorizedResult" : "result.result"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 376, "y" : 232 }
      },
      "connect" : [
        { "id" : "f11", "to" : "f14" }
      ]
    }, {
      "id" : "f12",
      "type" : "Script",
      "name" : "prepare options",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.dto.ai.AiOption;",
            "",
            "AiOption technicalOption = new AiOption(\"technical\", \"The query related to technical support such as broken computer, slow internet\");",
            "AiOption hrOption = new AiOption(\"hr\", \"The query related to human resource such as leave request, personal information update\");",
            "AiOption customerOption = new AiOption(\"customer\", \"The query related to customer\");",
            "AiOption otherOption = new AiOption(\"other\", \"The query didn't meet any condition above\");",
            "",
            "in.options.add(technicalOption);",
            "in.options.add(hrOption);",
            "in.options.add(customerOption);",
            "in.options.add(otherOption);"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 216, "y" : 232 },
        "size" : { "height" : 63 }
      },
      "connect" : [
        { "id" : "f13", "to" : "f10", "color" : "default" }
      ]
    }, {
      "id" : "f14",
      "type" : "Alternative",
      "config" : {
        "conditions" : {
          "f15" : "in.categorizedResult == \"technical\"",
          "f16" : "in.categorizedResult == \"hr\"",
          "f17" : "in.categorizedResult == \"customer\"",
          "f18" : "in.categorizedResult == \"other\""
        }
      },
      "visual" : {
        "at" : { "x" : 504, "y" : 232 }
      },
      "connect" : [
        { "id" : "f15", "to" : "f19", "color" : "default" },
        { "id" : "f16", "to" : "f23", "via" : [ { "x" : 504, "y" : 328 } ] },
        { "id" : "f17", "to" : "f21", "via" : [ { "x" : 504, "y" : 424 } ] },
        { "id" : "f18", "to" : "f25", "via" : [ { "x" : 504, "y" : 520 } ] }
      ]
    }, {
      "id" : "f19",
      "type" : "Script",
      "name" : "Create Technical ticket",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.axon.ivy.ai.demo.dto.SupportTicket;",
            "import com.axonivy.utils.ai.axon.ivy.ai.demo.enums.TicketType;",
            "",
            "in.targetObject = new SupportTicket();",
            "in.targetObject.type = TicketType.TECHNICAL;"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 616, "y" : 232 }
      },
      "connect" : [
        { "id" : "f20", "to" : "f29", "color" : "default" }
      ]
    }, {
      "id" : "f21",
      "type" : "Script",
      "name" : "Create Customer ticket",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.axon.ivy.ai.demo.enums.TicketType;",
            "import com.axonivy.utils.ai.axon.ivy.ai.demo.dto.SupportTicket;",
            "",
            "in.targetObject = new SupportTicket();",
            "in.targetObject.type = TicketType.CUSTOMER;"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 616, "y" : 424 }
      },
      "connect" : [
        { "id" : "f22", "to" : "f33" }
      ]
    }, {
      "id" : "f23",
      "type" : "Script",
      "name" : "Create HR ticket",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.axon.ivy.ai.demo.enums.TicketType;",
            "import com.axonivy.utils.ai.axon.ivy.ai.demo.dto.SupportTicket;",
            "",
            "in.targetObject = new SupportTicket();",
            "in.targetObject.type = TicketType.HR;"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 616, "y" : 328 }
      },
      "connect" : [
        { "id" : "f24", "to" : "f31" }
      ]
    }, {
      "id" : "f25",
      "type" : "Script",
      "name" : "Create Other ticket",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.axon.ivy.ai.demo.dto.SupportTicket;",
            "import com.axonivy.utils.ai.axon.ivy.ai.demo.enums.TicketType;",
            "",
            "in.targetObject = new SupportTicket();",
            "in.targetObject.type = TicketType.OTHER;"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 616, "y" : 520 }
      },
      "connect" : [
        { "id" : "f26", "to" : "f35" }
      ]
    }, {
      "id" : "f27",
      "type" : "SubProcessCall",
      "name" : "Use AI to create ticket",
      "config" : {
        "processCall" : "AiTool/ObjectMapping:AiObjectMapping(String,Object,List<com.axonivy.utils.ai.dto.ai.AiExample>,List<String>,com.axonivy.utils.ai.connector.AbstractAiServiceConnector,List<com.axonivy.utils.ai.dto.ai.FieldExplanation>)",
        "call" : {
          "map" : {
            "param.query" : "in.query + System.lineSeparator() + \"username : \" + in.employeeUsername;",
            "param.targetObject" : "in.targetObject",
            "param.customInstructions" : "in.customInstructions",
            "param.connector" : "in.connector"
          }
        },
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.axon.ivy.ai.demo.dto.SupportTicket;",
            "",
            "in.supportTicket = result.result as SupportTicket;"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 1120, "y" : 232 }
      },
      "connect" : [
        { "id" : "f75", "to" : "f9" }
      ]
    }, {
      "id" : "f29",
      "type" : "Script",
      "name" : "Prepare field explanations",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.dto.ai.FieldExplanation;",
            "import java.util.Arrays;",
            "",
            "in.fieldExplanations.addAll(Arrays.asList(",
            "  new FieldExplanation(\"type\", \"Type of the support ticket. It's an enum field only accept 4 values: TECHNICAL, CUSTOMER, HR, OTHER\"),",
            "  new FieldExplanation(\"name\", \"Name of the support ticket. Must be start with prefix 'Support ticket: '\"),",
            "  new FieldExplanation(\"description\", \"description of the support ticket\"),",
            "  new FieldExplanation(\"employeeUsernam\", \"username of the employee requested this ticket\")",
            "));"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 792, "y" : 232 }
      },
      "connect" : [
        { "id" : "f30", "to" : "f37", "color" : "default" }
      ]
    }, {
      "id" : "f31",
      "type" : "Script",
      "name" : "Prepare field explanations",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.dto.ai.FieldExplanation;",
            "import java.util.Arrays;",
            "",
            "in.fieldExplanations.addAll(Arrays.asList(",
            "  new FieldExplanation(\"type\", \"Type of the support ticket. It's an enum field only accept 4 values: TECHNICAL, CUSTOMER, HR, OTHER\"),",
            "  new FieldExplanation(\"name\", \"Name of the support ticket. Must be start with prefix 'Support ticket: '\"),",
            "  new FieldExplanation(\"description\", \"description of the support ticket\"),",
            "  new FieldExplanation(\"requestor\", \"Leave this field empty\")",
            "));"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 792, "y" : 328 }
      },
      "connect" : [
        { "id" : "f32", "to" : "f39", "color" : "default" }
      ]
    }, {
      "id" : "f33",
      "type" : "Script",
      "name" : "Prepare field explanations",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.dto.ai.FieldExplanation;",
            "import java.util.Arrays;",
            "",
            "in.fieldExplanations.addAll(Arrays.asList(",
            "  new FieldExplanation(\"type\", \"Type of the support ticket. It's an enum field only accept 4 values: TECHNICAL, CUSTOMER, HR, OTHER\"),",
            "  new FieldExplanation(\"name\", \"Name of the support ticket. Must be start with prefix 'Support ticket: '\"),",
            "  new FieldExplanation(\"description\", \"description of the support ticket\"),",
            "  new FieldExplanation(\"requestor\", \"Leave this field empty\")",
            "));"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 792, "y" : 424 }
      },
      "connect" : [
        { "id" : "f34", "to" : "f41", "color" : "default" }
      ]
    }, {
      "id" : "f35",
      "type" : "Script",
      "name" : "Prepare field explanations",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.dto.ai.FieldExplanation;",
            "import java.util.Arrays;",
            "",
            "in.fieldExplanations.addAll(Arrays.asList(",
            "  new FieldExplanation(\"type\", \"Type of the support ticket. It's an enum field only accept 4 values: TECHNICAL, CUSTOMER, HR, OTHER\"),",
            "  new FieldExplanation(\"name\", \"Name of the support ticket. Must be start with prefix 'Support ticket: '\"),",
            "  new FieldExplanation(\"description\", \"description of the support ticket\"),",
            "  new FieldExplanation(\"requestor\", \"Leave this field empty\")",
            "));"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 792, "y" : 520 }
      },
      "connect" : [
        { "id" : "f36", "to" : "f43", "color" : "default" }
      ]
    }, {
      "id" : "f37",
      "type" : "Script",
      "name" : "Set custom instructions",
      "config" : {
        "output" : {
          "code" : [
            "in.customInstructions.add(\"This is a support type technical\");",
            "in.customInstructions.add(\"ticket name must be start with prefix [type]. Example: [HR] User request a day leave\");",
            "in.customInstructions.add(\"description must be the whole query\");",
            "in.customInstructions.add(\"ticket name must be informative\");"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 960, "y" : 232 }
      },
      "connect" : [
        { "id" : "f38", "to" : "f27", "color" : "default" }
      ]
    }, {
      "id" : "f39",
      "type" : "Script",
      "name" : "Set custom instructions",
      "config" : {
        "output" : {
          "code" : [
            "in.customInstructions.add(\"This is a support type HR\");",
            "in.customInstructions.add(\"ticket name must be start with prefix [type]. Example: [HR] User request a day leave\");",
            "in.customInstructions.add(\"description must be the whole query\");",
            "in.customInstructions.add(\"ticket name must be informative\");"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 960, "y" : 328 }
      },
      "connect" : [
        { "id" : "f57", "to" : "f27", "via" : [ { "x" : 1120, "y" : 328 } ] }
      ]
    }, {
      "id" : "f41",
      "type" : "Script",
      "name" : "Set custom instructions",
      "config" : {
        "output" : {
          "code" : [
            "in.customInstructions.add(\"This is a support type customer\");",
            "in.customInstructions.add(\"ticket name must be start with prefix [type]. Example: [HR] User request a day leave\");",
            "in.customInstructions.add(\"description must be the whole query\");",
            "in.customInstructions.add(\"ticket name must be informative\");"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 960, "y" : 424 }
      },
      "connect" : [
        { "id" : "f58", "to" : "f27", "via" : [ { "x" : 1120, "y" : 424 } ] }
      ]
    }, {
      "id" : "f43",
      "type" : "Script",
      "name" : "Set custom instructions",
      "config" : {
        "output" : {
          "code" : [
            "in.customInstructions.add(\"This is a support type Other\");",
            "in.customInstructions.add(\"ticket name must be start with prefix [type]. Example: [HR] User request a day leave\");",
            "in.customInstructions.add(\"description must be the whole query\");",
            "in.customInstructions.add(\"ticket name must be informative\");"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 960, "y" : 520 }
      },
      "connect" : [
        { "id" : "f59", "to" : "f27", "via" : [ { "x" : 1120, "y" : 520 } ] }
      ]
    }, {
      "id" : "S1",
      "type" : "EmbeddedProcess",
      "name" : "Update custom field",
      "elements" : [ {
          "id" : "S1-g0",
          "type" : "EmbeddedStart",
          "name" : "in",
          "visual" : {
            "at" : { "x" : 109, "y" : 62 }
          },
          "parentConnector" : "f82",
          "connect" : [
            { "id" : "S1-f6", "to" : "S1-f2" }
          ]
        }, {
          "id" : "S1-g1",
          "type" : "EmbeddedEnd",
          "name" : "out",
          "visual" : {
            "at" : { "x" : 616, "y" : 64 }
          },
          "parentConnector" : "f54"
        }, {
          "id" : "S1-f2",
          "type" : "Script",
          "name" : "Set custom instructions",
          "config" : {
            "output" : {
              "code" : [
                "in.customInstructions.add(\"Only focus on adding custom fields\");",
                "in.customInstructions.add(\"Each custom field is a pair of name - value. Example: {\\\"employeeUsername\\\" : \\\"mnhnam\\\"}\");",
                "in.customInstructions.add(\"Add custom field: 'ticketId', value is the support ticket id\");",
                "in.customInstructions.add(\"Add custom field: 'employeeUsername', value is the employee username\");"
              ]
            }
          },
          "visual" : {
            "at" : { "x" : 272, "y" : 64 }
          },
          "connect" : [
            { "id" : "S1-f3", "to" : "S1-f4" }
          ]
        }, {
          "id" : "S1-f4",
          "type" : "SubProcessCall",
          "name" : "Use AI to update task info",
          "config" : {
            "processCall" : "AiTool/ObjectMapping:AiObjectMapping(String,Object,List<com.axonivy.utils.ai.dto.ai.AiExample>,List<String>,com.axonivy.utils.ai.connector.AbstractAiServiceConnector,List<com.axonivy.utils.ai.dto.ai.FieldExplanation>)",
            "call" : {
              "map" : {
                "param.query" : "in.query",
                "param.targetObject" : "in.taskInfo",
                "param.customInstructions" : "in.customInstructions",
                "param.connector" : "in.connector"
              }
            },
            "output" : {
              "code" : [
                "import com.axonivy.utils.ai.dto.ivy.TaskInfo;",
                "import com.axonivy.utils.ai.persistence.converter.BusinessEntityConverter;",
                "",
                "String taskInfoStr = BusinessEntityConverter.entityToJsonValue(result.result);",
                "in.taskInfo = BusinessEntityConverter.jsonValueToEntity(taskInfoStr, TaskInfo.class) as TaskInfo;"
              ]
            }
          },
          "visual" : {
            "at" : { "x" : 456, "y" : 64 }
          },
          "connect" : [
            { "id" : "S1-f5", "to" : "S1-g1" }
          ]
        } ],
      "visual" : {
        "at" : { "x" : 736, "y" : 72 }
      },
      "connect" : [
        { "id" : "f54", "to" : "f3" }
      ]
    }, {
      "id" : "f61",
      "type" : "CallSubStart",
      "name" : "chooseTicketApprover(SupportTicket)",
      "config" : {
        "signature" : "chooseTicketApprover",
        "input" : {
          "params" : [
            { "name" : "supportTicket", "type" : "com.axonivy.utils.ai.axon.ivy.ai.demo.dto.SupportTicket", "desc" : "" }
          ],
          "map" : {
            "out.supportTicket" : "param.supportTicket"
          }
        },
        "result" : {
          "params" : [
            { "name" : "supportTicket", "type" : "com.axonivy.utils.ai.axon.ivy.ai.demo.dto.SupportTicket", "desc" : "" }
          ],
          "map" : {
            "result.supportTicket" : "in.supportTicket"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 88, "y" : 656 }
      },
      "connect" : [
        { "id" : "f74", "to" : "f63" }
      ]
    }, {
      "id" : "f62",
      "type" : "CallSubEnd",
      "visual" : {
        "at" : { "x" : 720, "y" : 656 }
      }
    }, {
      "id" : "f63",
      "type" : "Script",
      "name" : "Choose approvers programmatically",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.axon.ivy.ai.demo.handler.SupportTicketApproverHandler;",
            "SupportTicketApproverHandler.chooseApprovers(in.supportTicket);"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 312, "y" : 656 },
        "size" : { "width" : 160 }
      },
      "connect" : [
        { "id" : "f65", "to" : "f148" }
      ]
    }, {
      "id" : "f68",
      "type" : "CallSubStart",
      "name" : "handleHrTicket(SupportTicket)",
      "config" : {
        "signature" : "handleHrTicket",
        "input" : {
          "params" : [
            { "name" : "supportTicket", "type" : "com.axonivy.utils.ai.axon.ivy.ai.demo.dto.SupportTicket", "desc" : "" }
          ],
          "map" : {
            "out.supportTicket" : "param.supportTicket"
          }
        },
        "result" : {
          "params" : [
            { "name" : "result", "type" : "com.axonivy.utils.ai.dto.ai.AiVariable", "desc" : "" }
          ],
          "map" : {
            "result.result" : "in.aiVariable"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 88, "y" : 784 }
      },
      "connect" : [
        { "id" : "f86", "to" : "f91" }
      ]
    }, {
      "id" : "f76",
      "type" : "Script",
      "name" : "Create Task info object",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.dto.ivy.TaskInfo;",
            "in.taskInfo = new TaskInfo();"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 248, "y" : 72 }
      },
      "connect" : [
        { "id" : "f77", "to" : "f78" }
      ]
    }, {
      "id" : "f78",
      "type" : "Script",
      "name" : "Prepare field explanations",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.dto.ai.FieldExplanation;",
            "import java.util.Arrays;",
            "",
            "in.fieldExplanations.addAll(Arrays.asList(",
            "  new FieldExplanation(\"name\", \"Name of the Axon ivy task.\"),",
            "  new FieldExplanation(\"description\", \"Description of the task\"),",
            "  new FieldExplanation(\"responsible\", \"Responsible of the task\"),",
            "  new FieldExplanation(\"customFields\", \"Custom fields for the task. Each custom field is a pair of key-value. This field is an Map<String, String> in Java\")",
            "));"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 408, "y" : 72 }
      },
      "connect" : [
        { "id" : "f79", "to" : "f80", "color" : "default" }
      ]
    }, {
      "id" : "f80",
      "type" : "SubProcessCall",
      "name" : "Use AI to create task info",
      "config" : {
        "processCall" : "AiTool/ObjectMapping:AiObjectMapping(String,Object,List<com.axonivy.utils.ai.dto.ai.AiExample>,List<String>,com.axonivy.utils.ai.connector.AbstractAiServiceConnector,List<com.axonivy.utils.ai.dto.ai.FieldExplanation>)",
        "call" : {
          "map" : {
            "param.query" : "in.query",
            "param.targetObject" : "in.taskInfo",
            "param.customInstructions" : "in.customInstructions",
            "param.connector" : "in.connector"
          }
        },
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.dto.ivy.TaskInfo;",
            "import com.axonivy.utils.ai.persistence.converter.BusinessEntityConverter;",
            "",
            "String taskInfoStr = BusinessEntityConverter.entityToJsonValue(result.result);",
            "in.taskInfo = BusinessEntityConverter.jsonValueToEntity(taskInfoStr, TaskInfo.class) as TaskInfo;"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 568, "y" : 72 }
      },
      "connect" : [
        { "id" : "f82", "to" : "S1" }
      ]
    }, {
      "id" : "f87",
      "type" : "Script",
      "name" : "Create Task info object",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.dto.ivy.TaskInfo;",
            "in.taskInfo = new TaskInfo();"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 816, "y" : 784 }
      },
      "connect" : [
        { "id" : "f141", "to" : "f140" }
      ]
    }, {
      "id" : "f89",
      "type" : "SubProcessCall",
      "name" : "Use AI: categorize request type",
      "config" : {
        "processCall" : "AiTool/DecisionMaking:AiDecide(List<com.axonivy.utils.ai.dto.ai.AiOption>,String,List<com.axonivy.utils.ai.dto.ai.AiExample>,List<String>,com.axonivy.utils.ai.connector.AbstractAiServiceConnector)",
        "call" : {
          "map" : {
            "param.options" : "in.options",
            "param.query" : "com.axonivy.utils.ai.persistence.converter.BusinessEntityConverter.entityToJsonValue(in.supportTicket)",
            "param.connector" : "in.connector"
          }
        },
        "output" : {
          "map" : {
            "out" : "in",
            "out.categorizedResult" : "result.result"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 456, "y" : 784 }
      },
      "connect" : [
        { "id" : "f90", "to" : "f93", "color" : "default" }
      ]
    }, {
      "id" : "f91",
      "type" : "Script",
      "name" : "prepare options",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.dto.ai.AiOption;",
            "",
            "AiOption leaveOption = new AiOption(\"absent\", \"The support ticket related to asking for day off, absent, leave request\");",
            "AiOption infoOption = new AiOption(\"info\", \"The support ticket related to personal information update\");",
            "",
            "in.options.clear();",
            "in.options.add(leaveOption);",
            "in.options.add(infoOption);"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 288, "y" : 783 },
        "size" : { "height" : 63 }
      },
      "connect" : [
        { "id" : "f92", "to" : "f89", "color" : "default" }
      ]
    }, {
      "id" : "f93",
      "type" : "Alternative",
      "name" : "request type?",
      "config" : {
        "conditions" : {
          "f94" : "in.categorizedResult == \"info\""
        }
      },
      "visual" : {
        "at" : { "x" : 584, "y" : 784 },
        "labelOffset" : { "y" : -16 }
      },
      "connect" : [
        { "id" : "f94", "to" : "f87", "label" : {
            "name" : "update personal info",
            "offset" : { "x" : 1, "y" : 14 }
          }, "color" : "default" },
        { "id" : "f107", "to" : "f105", "label" : {
            "name" : "leave request",
            "offset" : { "x" : -47, "y" : 1 }
          } }
      ]
    }, {
      "id" : "f98",
      "type" : "TriggerCall",
      "name" : "Create approval case",
      "config" : {
        "processCall" : "AgentDemo/SupportBusiness:handleHrTicket(com.axonivy.utils.ai.dto.ivy.TaskInfo,com.axonivy.utils.ai.dto.ivy.TaskInfo)",
        "call" : {
          "map" : {
            "param.taskInfo" : "in.taskInfo",
            "param.secondTaskInfo" : "in.secondTaskInfo"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 1544, "y" : 1112 }
      },
      "connect" : [
        { "id" : "f118", "to" : "f119" }
      ]
    }, {
      "id" : "f99",
      "type" : "SubProcessCall",
      "name" : "Use AI: Evaluate leave request",
      "config" : {
        "processCall" : "AiTool/DecisionMaking:AiDecide(List<com.axonivy.utils.ai.dto.ai.AiOption>,String,List<com.axonivy.utils.ai.dto.ai.AiExample>,List<String>,com.axonivy.utils.ai.connector.AbstractAiServiceConnector)",
        "call" : {
          "map" : {
            "param.options" : "in.options",
            "param.query" : "com.axonivy.utils.ai.persistence.converter.BusinessEntityConverter.entityToJsonValue(in.supportTicket)",
            "param.connector" : "in.connector"
          }
        },
        "output" : {
          "map" : {
            "out" : "in",
            "out.categorizedResult" : "result.result"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 584, "y" : 1112 }
      },
      "connect" : [
        { "id" : "f100", "to" : "f103" }
      ]
    }, {
      "id" : "f103",
      "type" : "Alternative",
      "name" : "status of the request?",
      "config" : {
        "conditions" : {
          "f125" : "in.categorizedResult.equals(\"reject\")",
          "f129" : "in.categorizedResult.equals(\"approve\")"
        }
      },
      "visual" : {
        "at" : { "x" : 744, "y" : 1112 },
        "labelOffset" : { "y" : -24 }
      },
      "connect" : [
        { "id" : "f125", "to" : "f113", "via" : [ { "x" : 744, "y" : 1224 } ], "label" : {
            "name" : "reject",
            "segment" : 1.5,
            "offset" : { "x" : -123, "y" : 14 }
          } },
        { "id" : "f129", "to" : "f126", "label" : {
            "name" : "approve",
            "offset" : { "x" : -3, "y" : 14 }
          } }
      ]
    }, {
      "id" : "f105",
      "type" : "Script",
      "name" : "Prepare query before send to AI",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.axon.ivy.ai.demo.service.EmployeeService;",
            "import com.axonivy.utils.ai.axon.ivy.ai.demo.dto.Employee;",
            "import com.axonivy.utils.ai.persistence.converter.BusinessEntityConverter;",
            "",
            "Employee requestor = EmployeeService.getInstance().findByUsername(in.supportTicket.employeeUsername);",
            "",
            "in.query = \"Employee remaining day: \" + requestor.getRemainingDays()",
            "  + System.lineSeparator()",
            "  + \"The request: \"",
            "  + System.lineSeparator() + in.supportTicket.description;"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 584, "y" : 920 }
      },
      "connect" : [
        { "id" : "f106", "to" : "f138", "color" : "default" }
      ]
    }, {
      "id" : "f113",
      "type" : "EMail",
      "name" : "Send reject email",
      "visual" : {
        "at" : { "x" : 1144, "y" : 1224 }
      },
      "connect" : [
        { "id" : "f116", "to" : "f143" }
      ]
    }, {
      "id" : "f115",
      "type" : "CallSubEnd",
      "visual" : {
        "at" : { "x" : 2064, "y" : 1224 }
      }
    }, {
      "id" : "f119",
      "type" : "EMail",
      "name" : "Send inform email",
      "visual" : {
        "at" : { "x" : 1720, "y" : 1112 }
      },
      "connect" : [
        { "id" : "f120", "to" : "f143", "via" : [ { "x" : 1808, "y" : 1112 } ], "color" : "default" }
      ]
    }, {
      "id" : "f126",
      "type" : "Script",
      "name" : "Prepare field explanations",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.dto.ivy.TaskInfo;",
            "import com.axonivy.utils.ai.dto.ai.FieldExplanation;",
            "import java.util.Arrays;",
            "",
            "in.taskInfo = new TaskInfo();",
            "",
            "in.fieldExplanations.addAll(Arrays.asList(",
            "  new FieldExplanation(\"name\", \"Name of the Axon ivy task.\"),",
            "  new FieldExplanation(\"description\", \"Description of the task\"),",
            "  new FieldExplanation(\"responsible\", \"Responsible of the task\"),",
            "  new FieldExplanation(\"customFields\", \"Custom fields for the task. Each custom field is a pair of key-value. This field is an Map<String, String> in Java\")",
            "));"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 904, "y" : 1112 }
      },
      "connect" : [
        { "id" : "f127", "to" : "f136", "color" : "default" }
      ]
    }, {
      "id" : "f128",
      "type" : "SubProcessCall",
      "name" : "Use AI to create task info",
      "config" : {
        "processCall" : "AiTool/ObjectMapping:AiObjectMapping(String,Object,List<com.axonivy.utils.ai.dto.ai.AiExample>,List<String>,com.axonivy.utils.ai.connector.AbstractAiServiceConnector,List<com.axonivy.utils.ai.dto.ai.FieldExplanation>)",
        "call" : {
          "map" : {
            "param.query" : "in.query",
            "param.targetObject" : "in.taskInfo",
            "param.customInstructions" : "in.customInstructions",
            "param.connector" : "in.connector"
          }
        },
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.dto.ivy.TaskInfo;",
            "import com.axonivy.utils.ai.persistence.converter.BusinessEntityConverter;",
            "",
            "String taskInfoStr = BusinessEntityConverter.entityToJsonValue(result.result);",
            "in.taskInfo = BusinessEntityConverter.jsonValueToEntity(taskInfoStr, TaskInfo.class) as TaskInfo;"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 1224, "y" : 1112 }
      },
      "connect" : [
        { "id" : "f130", "to" : "f146" }
      ]
    }, {
      "id" : "f136",
      "type" : "Script",
      "name" : "Set custom instructions",
      "config" : {
        "output" : {
          "code" : [
            "in.customInstructions.add(\"Task name should be in format: <user name> requested a leave request from <from date> to <to date>\");",
            "in.customInstructions.add(\"Description should be: This request is approved by Axon Ivy AI\");"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 1064, "y" : 1112 }
      },
      "connect" : [
        { "id" : "f137", "to" : "f128", "color" : "default" }
      ]
    }, {
      "id" : "f138",
      "type" : "Script",
      "name" : "prepare options",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.dto.ai.AiOption;",
            "",
            "AiOption approve = new AiOption(\"approve\", \"The support ticket related to asking for day off, absent, leave request\");",
            "AiOption reject = new AiOption(\"reject\", \"The support ticket related to personal information update\");",
            "",
            "in.options.clear();",
            "in.options.add(approve);",
            "in.options.add(reject);"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 584, "y" : 1016 },
        "size" : { "height" : 63 }
      },
      "connect" : [
        { "id" : "f139", "to" : "f99", "color" : "default" }
      ]
    }, {
      "id" : "f140",
      "type" : "CallSubEnd",
      "visual" : {
        "at" : { "x" : 1064, "y" : 784 }
      }
    }, {
      "id" : "f142",
      "type" : "Script",
      "name" : "Prepare result",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.ai.dto.IvyToolParameter;",
            "import com.axonivy.utils.ai.enums.AiVariableState;",
            "import com.axonivy.utils.ai.dto.ai.AiVariable;",
            "",
            "in.aiVariable = new AiVariable();",
            "in.aiVariable.setParameter(new IvyToolParameter());",
            "in.aiVariable.getParameter().setClassName(\"String\");",
            "in.aiVariable.getParameter().setValue(\"Task is created successfully\");",
            "in.aiVariable.getParameter().setName(\"taskResult\");",
            "in.aiVariable.state = AiVariableState.SUCCESS;"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 1936, "y" : 1224 }
      },
      "connect" : [
        { "id" : "f145", "to" : "f115", "color" : "default" }
      ]
    }, {
      "id" : "f143",
      "type" : "Alternative",
      "visual" : {
        "at" : { "x" : 1808, "y" : 1224 }
      },
      "connect" : [
        { "id" : "f144", "to" : "f142", "color" : "default" }
      ]
    }, {
      "id" : "f146",
      "type" : "Script",
      "name" : "Create the second task info",
      "config" : {
        "output" : {
          "code" : [
            "in.secondTaskInfo.customFields = in.taskInfo.customFields;",
            "in.secondTaskInfo.name = in.taskInfo.name;",
            "in.secondTaskInfo.description = in.taskInfo.description;",
            "in.secondTaskInfo.responsible = in.taskInfo.responsible;"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 1384, "y" : 1112 }
      },
      "connect" : [
        { "id" : "f147", "to" : "f98", "color" : "default" }
      ]
    }, {
      "id" : "f148",
      "type" : "Script",
      "name" : "Save to database",
      "visual" : {
        "at" : { "x" : 544, "y" : 656 }
      },
      "connect" : [
        { "id" : "f149", "to" : "f62", "color" : "default" }
      ]
    } ]
}