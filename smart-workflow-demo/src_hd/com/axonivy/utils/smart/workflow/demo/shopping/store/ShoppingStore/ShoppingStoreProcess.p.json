{
  "$schema" : "https://json-schema.axonivy.com/process/13.1.2/process.json",
  "id" : "199507587214AFDA",
  "kind" : "HTML_DIALOG",
  "config" : {
    "data" : "com.axonivy.utils.smart.workflow.demo.shopping.store.ShoppingStore.ShoppingStoreData"
  },
  "elements" : [ {
      "id" : "f0",
      "type" : "HtmlDialogStart",
      "name" : "start()",
      "config" : {
        "signature" : "start",
        "input" : {
          "map" : {
            "out.cartItems" : "new java.util.ArrayList()",
            "out.searched" : "false"
          }
        },
        "guid" : "199508094EC29AC1"
      },
      "visual" : {
        "at" : { "x" : 472, "y" : 224 }
      },
      "connect" : [
        { "id" : "f1", "to" : "f33" }
      ]
    }, {
      "id" : "f2",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 728, "y" : 224 }
      }
    }, {
      "id" : "f3",
      "type" : "HtmlDialogEventStart",
      "name" : "close",
      "config" : {
        "guid" : "199508094ECB63C9"
      },
      "visual" : {
        "at" : { "x" : 472, "y" : 416 }
      },
      "connect" : [
        { "id" : "f4", "to" : "f5" }
      ]
    }, {
      "id" : "f5",
      "type" : "HtmlDialogExit",
      "visual" : {
        "at" : { "x" : 600, "y" : 416 }
      }
    }, {
      "id" : "f6",
      "type" : "HtmlDialogMethodStart",
      "name" : "searchProducts()",
      "config" : {
        "signature" : "searchProducts",
        "input" : {
          "map" : {
            "out.searched" : "true"
          }
        },
        "guid" : "199508094EC929C7"
      },
      "visual" : {
        "at" : { "x" : 472, "y" : 528 }
      },
      "connect" : [
        { "id" : "f7", "to" : "f8" }
      ]
    }, {
      "id" : "f8",
      "type" : "Alternative",
      "name" : "empty search term ?",
      "config" : {
        "conditions" : {
          "f10" : "org.apache.commons.lang3.StringUtils.isBlank(in.customerRequest.originalQuery)",
          "f9" : ""
        }
      },
      "visual" : {
        "at" : { "x" : 568, "y" : 528 },
        "labelOffset" : { "x" : 24, "y" : -16 }
      },
      "connect" : [
        { "id" : "f9", "to" : "f46", "label" : {
            "name" : "no",
            "offset" : { "x" : 1, "y" : 14 }
          }, "color" : "default" },
        { "id" : "f10", "to" : "f20", "via" : [ { "x" : 568, "y" : 624 } ], "label" : {
            "name" : "yes",
            "segment" : 1.5,
            "offset" : { "x" : -79, "y" : 14 }
          } }
      ]
    }, {
      "id" : "f11",
      "type" : "HtmlDialogMethodStart",
      "name" : "clearSearch()",
      "config" : {
        "signature" : "clearSearch",
        "guid" : "199508094EE6470F"
      },
      "visual" : {
        "at" : { "x" : 472, "y" : 320 }
      },
      "connect" : [
        { "id" : "f35", "to" : "f33" }
      ]
    }, {
      "id" : "f18",
      "type" : "Script",
      "name" : "Find by category",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.smart.workflow.demo.shopping.product.ProductRepository;",
            "import ch.ivyteam.ivy.environment.Ivy;",
            "in.filteredProducts =  ProductRepository.getInstance().findByCategories(in.searchResponse.categoryIds);"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 1744, "y" : 528 }
      },
      "connect" : [
        { "id" : "f19", "to" : "f59", "color" : "default" }
      ]
    }, {
      "id" : "f20",
      "type" : "Script",
      "name" : "Find all",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.smart.workflow.demo.shopping.product.ProductRepository;",
            "",
            "in.filteredProducts = ProductRepository.getInstance().findAll();"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 1808, "y" : 624 }
      },
      "connect" : [
        { "id" : "f21", "to" : "f22", "via" : [ { "x" : 2192, "y" : 624 } ] }
      ]
    }, {
      "id" : "f22",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 2192, "y" : 528 }
      }
    }, {
      "id" : "f23",
      "type" : "HtmlDialogMethodStart",
      "name" : "addToCart(Product)",
      "config" : {
        "signature" : "addToCart",
        "input" : {
          "params" : [
            { "name" : "product", "type" : "com.axonivy.utils.smart.workflow.demo.shopping.product.Product", "desc" : "" }
          ],
          "map" : {
            "out.productToCart" : "param.product"
          }
        },
        "guid" : "199508094EE4FA45"
      },
      "visual" : {
        "at" : { "x" : 472, "y" : 752 }
      },
      "connect" : [
        { "id" : "f24", "to" : "f26" }
      ]
    }, {
      "id" : "f25",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 776, "y" : 752 }
      }
    }, {
      "id" : "f26",
      "type" : "Script",
      "name" : "Add item to cart",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.smart.workflow.demo.shopping.store.CartItem;",
            "",
            "boolean existingInCart = false;",
            "if (in.cartItems.size() > 0) {",
            "  for (int i = 0; i < in.cartItems.size(); i++) {",
            "    if (in.cartItems.get(i).product.sku == in.productToCart.sku) {",
            "      in.cartItems.get(i).quantity++;",
            "      existingInCart = true;",
            "      break;",
            "    }",
            "  }",
            "}",
            "if (!existingInCart) {",
            "  in.cartItems.add(new CartItem(in.productToCart));",
            "}"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 624, "y" : 752 }
      },
      "connect" : [
        { "id" : "f27", "to" : "f25" }
      ]
    }, {
      "id" : "f28",
      "type" : "HtmlDialogMethodStart",
      "name" : "getCartTotal()",
      "config" : {
        "signature" : "getCartTotal",
        "result" : {
          "params" : [
            { "name" : "total", "type" : "String", "desc" : "" }
          ],
          "map" : { },
          "code" : [
            "if (in.cartItems.size() == 0) {",
            "  result.total = \"0\";",
            "} else {",
            "  Float totalAmount = 0;",
            "  for (int i = 0; i < in.cartItems.size(); i++) {",
            "    totalAmount += in.cartItems.get(i).quantity * Float.valueOf(in.cartItems.get(i).getProduct().getUnitPrice());",
            "  }",
            "  result.total = Float.toString(totalAmount);",
            "}"
          ]
        },
        "guid" : "199508094EE602A0"
      },
      "visual" : {
        "at" : { "x" : 472, "y" : 880 }
      },
      "connect" : [
        { "id" : "f29", "to" : "f31" }
      ]
    }, {
      "id" : "f30",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 776, "y" : 880 }
      }
    }, {
      "id" : "f31",
      "type" : "Script",
      "name" : "calculate total",
      "visual" : {
        "at" : { "x" : 624, "y" : 880 }
      },
      "connect" : [
        { "id" : "f32", "to" : "f30" }
      ]
    }, {
      "id" : "f33",
      "type" : "Script",
      "name" : "Find all",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.smart.workflow.demo.shopping.store.CustomerRequest;",
            "import com.axonivy.utils.smart.workflow.demo.shopping.product.ProductRepository;",
            "",
            "in.filteredProducts = ProductRepository.getInstance().findAll();",
            "",
            "in.customerRequest = new CustomerRequest();",
            "in.customerRequest.originalQuery = \"\";"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 600, "y" : 224 }
      },
      "connect" : [
        { "id" : "f34", "to" : "f2", "color" : "default" }
      ]
    }, {
      "id" : "f36",
      "type" : "HtmlDialogMethodStart",
      "name" : "decreaseQuantity(CartItem)",
      "config" : {
        "signature" : "decreaseQuantity",
        "input" : {
          "params" : [
            { "name" : "item", "type" : "com.axonivy.utils.smart.workflow.demo.shopping.store.CartItem", "desc" : "" }
          ],
          "map" : {
            "out.selectedCartItem" : "param.item"
          }
        },
        "guid" : "1996035B69249005"
      },
      "visual" : {
        "at" : { "x" : 472, "y" : 1016 }
      },
      "connect" : [
        { "id" : "f39", "to" : "f37" }
      ]
    }, {
      "id" : "f37",
      "type" : "Script",
      "name" : "decrease quantity",
      "config" : {
        "output" : {
          "code" : [
            "in.selectedCartItem.quantity--;",
            "",
            "if (in.selectedCartItem.quantity < 0) {",
            "  in.cartItems.remove(in.selectedCartItem);",
            "}"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 624, "y" : 1016 }
      },
      "connect" : [
        { "id" : "f40", "to" : "f38" }
      ]
    }, {
      "id" : "f38",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 776, "y" : 1016 }
      }
    }, {
      "id" : "f41",
      "type" : "HtmlDialogMethodStart",
      "name" : "increaseQuantity(CartItem)",
      "config" : {
        "signature" : "increaseQuantity",
        "input" : {
          "params" : [
            { "name" : "item", "type" : "com.axonivy.utils.smart.workflow.demo.shopping.store.CartItem", "desc" : "" }
          ],
          "map" : {
            "out.selectedCartItem" : "param.item"
          }
        },
        "guid" : "1996038E8AAA6C5B"
      },
      "visual" : {
        "at" : { "x" : 472, "y" : 1136 }
      },
      "connect" : [
        { "id" : "f42", "to" : "f43" }
      ]
    }, {
      "id" : "f43",
      "type" : "Script",
      "name" : "increase quantity",
      "config" : {
        "output" : {
          "code" : "in.selectedCartItem.quantity++;"
        }
      },
      "visual" : {
        "at" : { "x" : 624, "y" : 1136 }
      },
      "connect" : [
        { "id" : "f44", "to" : "f45" }
      ]
    }, {
      "id" : "f45",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 776, "y" : 1136 }
      }
    }, {
      "id" : "f46",
      "type" : "SubProcessCall",
      "name" : "Translate search term",
      "config" : {
        "processCall" : "Business/ShoppingDemo/Agents/TranslationAgent:translationAgent(String)",
        "call" : {
          "map" : {
            "param.message" : "in.customerRequest.originalQuery"
          }
        },
        "output" : {
          "map" : {
            "out" : "in",
            "out.customerRequest.translatedQuery" : "result.result"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 760, "y" : 528 }
      },
      "connect" : [
        { "id" : "f58", "to" : "f70" }
      ]
    }, {
      "id" : "f50",
      "type" : "Script",
      "name" : "Find all related categories",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.smart.workflow.demo.shopping.product.ProductRepository;",
            "import com.axonivy.utils.smart.workflow.demo.shopping.productcategory.ProductCategoryRepository;",
            "",
            "in.categories = ProductCategoryRepository.getInstance().findAll();"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 1400, "y" : 528 }
      },
      "connect" : [
        { "id" : "f51", "to" : "f52" }
      ]
    }, {
      "id" : "f52",
      "type" : "ProgramInterface",
      "name" : "Semantic search category",
      "config" : {
        "javaClass" : "com.axonivy.utils.smart.workflow.AgenticProcessCall",
        "userConfig" : {
          "model" : "\"gpt-4.1\"",
          "system" : "Role:\r\nYou are a Product Category Extraction Agent. Your job is to analyze a user’s message and return the most relevant product categories from a predefined list.\r\n\r\nCategory data in JSON:\r\n\r\n<%= dev.langchain4j.internal.Json.toJson(in.categories) %>\r\n\r\nInstructions:\r\n\r\nConsider the user message and the provided product categories.\r\n\r\nSelect all categories that best match the user’s intent or described product needs.\r\n\r\nIf no category matches, return an empty list.\r\n\r\nDo not create new categories; only use the ones given in the list.\r\n\r\nAlways return the result as a list category ID\r\n\r\nExample result: [\"asdq34dskfsdf234\",\"34234lkn2lk34234\"]",
          "resultType" : "com.axonivy.utils.smart.workflow.demo.shopping.store.SearchResponse.class",
          "tools" : "[]",
          "resultMapping" : "in.searchResponse",
          "query" : "<%= in.customerRequest.translatedQuery %>"
        }
      },
      "visual" : {
        "at" : { "x" : 1576, "y" : 528 },
        "icon" : "res:/webContent/logo/agent.png"
      },
      "connect" : [
        { "id" : "f57", "to" : "f18" }
      ]
    }, {
      "id" : "f59",
      "type" : "Alternative",
      "name" : "found products by categories?",
      "config" : {
        "conditions" : {
          "f60" : "org.apache.commons.collections4.CollectionUtils.isNotEmpty(in.filteredProducts)"
        }
      },
      "visual" : {
        "at" : { "x" : 1912, "y" : 528 },
        "labelOffset" : { "x" : 24, "y" : 40 }
      },
      "connect" : [
        { "id" : "f60", "to" : "f22", "label" : {
            "name" : "yes",
            "offset" : { "x" : -4, "y" : -10 }
          }, "color" : "default" },
        { "id" : "f62", "to" : "f61", "label" : {
            "name" : "no",
            "offset" : { "x" : 17, "y" : 3 }
          } }
      ]
    }, {
      "id" : "f61",
      "type" : "SubProcessCall",
      "name" : "Create search criteria",
      "config" : {
        "processCall" : "Business/ShoppingDemo/Agents/ProductAgent:productAgent(String,com.axonivy.utils.smart.workflow.demo.shopping.product.ProductAgentAction)",
        "call" : {
          "map" : {
            "param.productInfo" : "in.customerRequest.translatedQuery",
            "param.action" : "com.axonivy.utils.smart.workflow.demo.shopping.product.ProductAgentAction.CREATE_CRITERIA"
          }
        },
        "output" : {
          "map" : {
            "out" : "in",
            "out.searchCriteria" : "result.response.productSearchCriteria"
          }
        }
      },
      "visual" : {
        "at" : { "x" : 1912, "y" : 424 }
      },
      "connect" : [
        { "id" : "f64", "to" : "f63" }
      ]
    }, {
      "id" : "f63",
      "type" : "Script",
      "name" : "Find by criteria",
      "config" : {
        "output" : {
          "code" : [
            "import com.axonivy.utils.smart.workflow.demo.shopping.product.ProductRepository;",
            "",
            "in.filteredProducts = ProductRepository.getInstance().findAll();"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 2088, "y" : 424 }
      },
      "connect" : [
        { "id" : "f65", "to" : "f22", "via" : [ { "x" : 2192, "y" : 424 } ] }
      ]
    }, {
      "id" : "f70",
      "type" : "ProgramInterface",
      "name" : "Detect user request type",
      "config" : {
        "javaClass" : "com.axonivy.utils.smart.workflow.AgenticProcessCall",
        "userConfig" : {
          "model" : "\"gpt-4.1-mini\"",
          "system" : "Detect type of user request",
          "resultType" : "com.axonivy.utils.smart.workflow.demo.shopping.enums.CustomerRequestType.class",
          "tools" : "[]",
          "resultMapping" : "in.customerRequest.requestType",
          "query" : "<%= in.customerRequest.translatedQuery %>"
        }
      },
      "visual" : {
        "at" : { "x" : 936, "y" : 528 },
        "icon" : "res:/webContent/logo/agent.png"
      },
      "connect" : [
        { "id" : "f71", "to" : "f72", "color" : "default" }
      ]
    }, {
      "id" : "f72",
      "type" : "Alternative",
      "name" : "Request type?",
      "config" : {
        "conditions" : {
          "f75" : "in.customerRequest.requestType == com.axonivy.utils.smart.workflow.demo.shopping.enums.CustomerRequestType.FIND",
          "f74" : ""
        }
      },
      "visual" : {
        "at" : { "x" : 1064, "y" : 528 }
      },
      "connect" : [
        { "id" : "f74", "to" : "f81", "via" : [ { "x" : 1064, "y" : 341 } ], "label" : {
            "name" : "suggest",
            "segment" : 1.5,
            "offset" : { "x" : -533, "y" : 83 }
          } },
        { "id" : "f75", "to" : "f50", "label" : {
            "name" : "find",
            "offset" : { "x" : -75, "y" : -10 }
          } }
      ]
    }, {
      "id" : "f77",
      "type" : "HtmlDialogEnd",
      "visual" : {
        "at" : { "x" : 1712, "y" : 1264 }
      }
    }, {
      "id" : "f79",
      "type" : "HtmlDialogEventStart",
      "name" : "createSuggestion",
      "config" : {
        "guid" : "199DC901B3ABA0E3"
      },
      "visual" : {
        "at" : { "x" : 472, "y" : 1264 }
      },
      "connect" : [
        { "id" : "f80", "to" : "f94" }
      ]
    }, {
      "id" : "f81",
      "type" : "Script",
      "name" : "Execute create suggestion remote command",
      "config" : {
        "output" : {
          "code" : [
            "import org.primefaces.PrimeFaces;",
            "PrimeFaces.current().executeScript(\"performSuggestion()\");"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 1268, "y" : 341 },
        "size" : { "width" : 152, "height" : 54 }
      },
      "connect" : [
        { "id" : "f82", "to" : "f22", "via" : [ { "x" : 2192, "y" : 344 } ], "color" : "default" }
      ]
    }, {
      "id" : "f83",
      "type" : "ProgramInterface",
      "name" : "Create suggestion items",
      "config" : {
        "javaClass" : "com.axonivy.utils.smart.workflow.AgenticProcessCall",
        "userConfig" : {
          "model" : "\"gpt-4.1\"",
          "system" : "Role:\r\nYou are an Item Suggestion Agent.\r\nYour task is to analyze a user’s input and suggest the most suitable keyword from a predefined keyword list.\r\nHere is my keywords list I have in the database. Please choose the most suitable keyword items\r\n<%= in.keywords %>\r\nInstructions:\r\n  1.Carefully read and understand the user’s input, including preferences, context, and intent.\r\n  2.Compare the user input with all provided items in the list.\r\n  3.Select items that best match the user’s needs or intent, based on relevance, similarity, or feature alignment.\r\n  4.You may return multiple items if they are strong matches.\r\n  5.If no item matches the user’s input, return an empty list.\r\n  6.Do not invent or modify items; only use those provided in the input list.\r\n  7.Always return the result as a list of keyword.",
          "resultType" : "com.axonivy.utils.smart.workflow.demo.shopping.store.SearchResponse.class",
          "tools" : "[]",
          "resultMapping" : "in.searchResponse",
          "query" : "<%= in.customerRequest.translatedQuery %>"
        }
      },
      "visual" : {
        "at" : { "x" : 896, "y" : 1264 },
        "icon" : "res:/webContent/logo/agent.png"
      },
      "connect" : [
        { "id" : "f84", "to" : "f85", "color" : "default" }
      ]
    }, {
      "id" : "f85",
      "type" : "Alternative",
      "visual" : {
        "at" : { "x" : 1040, "y" : 1264 }
      },
      "connect" : [
        { "id" : "f86", "to" : "f87", "color" : "default" }
      ]
    }, {
      "id" : "f87",
      "type" : "Script",
      "name" : "find items",
      "config" : {
        "output" : {
          "code" : [
            "import org.apache.commons.lang3.ObjectUtils;",
            "import com.sun.org.apache.xalan.internal.xsltc.compiler.If;",
            "import ch.ivyteam.ivy.environment.Ivy;",
            "import com.axonivy.utils.smart.workflow.demo.shopping.product.ProductRepository;",
            "import com.axonivy.utils.smart.workflow.demo.shopping.searchkeyword.ProductKeywordRepository;",
            "import java.util.Set;",
            "",
            "Set<String> productIds = ProductKeywordRepository.getInstance().findProductIdByKeyWords(in.keywords);",
            "if (ObjectUtils.isNotEmpty(productIds)) {",
            "  in.filteredProducts = ProductRepository.getInstance().findProductsByIds(productIds);",
            "} else {",
            "  in.filteredProducts = [];",
            "}"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 1184, "y" : 1264 }
      },
      "connect" : [
        { "id" : "f88", "to" : "f92", "color" : "default" }
      ]
    }, {
      "id" : "f92",
      "type" : "ProgramInterface",
      "name" : "Find most suitable",
      "config" : {
        "javaClass" : "com.axonivy.utils.smart.workflow.AgenticProcessCall",
        "userConfig" : {
          "model" : "\"gpt-4.1\"",
          "system" : "Role:\r\nYou are a Product Recommendation Agent.\r\nYour job is to analyze a customer’s input <%= in.customerRequest.translatedQuery %> and suggest the most suitable products from a predefined product list <<%= in.filteredProducts %>. \r\n\r\nInstructions:\r\n  1. Carefully understand what the user is looking for (e.g., style, color, gender, season, or occasion).\r\n  2. If the user’s input is about clothing, recommend not just one item but a complete matching outfit — for example:\r\n    - Top: shirt, blouse, t-shirt, or jacket\r\n    - Bottom: trousers, jeans, skirt, or shorts\r\n    - Footwear: shoes, sneakers, sandals, or boots\r\n    - Optionally, include accessories (e.g., belt, hat, or bag) if relevant.\r\n  3. Ensure all recommended items complement each other in:\r\n    - Style (e.g., formal, casual, sporty)\r\n    - Color palette\r\n    - Occasion suitability (e.g., work, travel, party)\r\n  4. Rank the products by overall outfit suitability, user intent match, and visual harmony.\r\n  5. If the user input doesn’t specify enough detail, infer missing information logically (e.g., if they say “summer outfit,” prefer light fabrics and bright colors).\r\n  6. Return a concise and clear recommendation list, highlighting why the products fit well together.",
          "resultType" : "com.axonivy.utils.smart.workflow.demo.shopping.product.ProductList.class",
          "tools" : "[]",
          "resultMapping" : "in.suitableProducts",
          "query" : "<%= in.customerRequest.translatedQuery %>"
        }
      },
      "visual" : {
        "at" : { "x" : 1384, "y" : 1264 },
        "icon" : "res:/webContent/logo/agent.png"
      },
      "connect" : [
        { "id" : "f93", "to" : "f96", "color" : "default" }
      ]
    }, {
      "id" : "f94",
      "type" : "Script",
      "name" : "Extract Keywords input from users",
      "config" : {
        "output" : {
          "code" : [
            "import ch.ivyteam.ivy.environment.Ivy;",
            "import com.axonivy.utils.smart.workflow.demo.shopping.searchkeyword.ProductKeywordRepository;",
            "import com.axonivy.utils.smart.workflow.demo.shopping.common.KeywordRepository;",
            "",
            "in.keywords = ProductKeywordRepository.getInstance().extractKeywords();"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 664, "y" : 1264 }
      },
      "connect" : [
        { "id" : "f95", "to" : "f83", "color" : "default" }
      ]
    }, {
      "id" : "f96",
      "type" : "Script",
      "config" : {
        "output" : {
          "code" : [
            "import ch.ivyteam.ivy.environment.Ivy;",
            "",
            "in.filteredProducts = in.suitableProducts.products;",
            "",
            "Ivy.log().warn(in.filteredProducts.size());"
          ]
        }
      },
      "visual" : {
        "at" : { "x" : 1568, "y" : 1264 }
      },
      "connect" : [
        { "id" : "f97", "to" : "f77" }
      ]
    } ]
}